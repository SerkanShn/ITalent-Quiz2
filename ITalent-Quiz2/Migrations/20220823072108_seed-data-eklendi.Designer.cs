// <auto-generated />
using System;
using ITalent_Quiz2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITalent_Quiz2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220823072108_seed-data-eklendi")]
    partial class seeddataeklendi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ITalent_Quiz2.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Seyahat birçok insan için büyük önem taşır. İş için, keyif için, tatil için vs. seyahat yapılabilir.",
                            Title = "Seyahat"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Eğitim ve okul günümüzde çok popüler bir konudur. Herkes iyi bir iş sahibi olmak istiyor. Bunun için en önemlisi eğitim. Eğitim hayat boyu sürer ve asla bitmez.",
                            Title = "Eğitim"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Güzellik, moda, makyaj, mücevher vs. Moda sürekli değişen bir şeydir.",
                            Title = "Güzellik"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Sağlık, diyet ve egzersiz insanlar için önemli konulardır. Herkes sağlıklı kalmak ve hayatını sonuna kadar yaşamak istiyor.",
                            Title = "Sağlık"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Yiyecek hayatın önemli bir parçasıdır. Birçoğumuz yemek yemeyi seviyor. Yemek, içmek, lokantaya gitmek insanların boş zamanlarını oluşturuyor.",
                            Title = "Yiyecek"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Programlama, bilgisayar sistemlerini kontrol etmemiz için süper güçler sağlayan bir alandır. Uçaklarda, trafik kontrolünde, robotlarda, sürücüsüz arabalarda, web sitelerinde, mobil uygulamalarda ve birçok alanda kullanılabilir.",
                            Title = "Yazılım"
                        });
                });

            modelBuilder.Entity("ITalent_Quiz2.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostBanner")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PostContents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("ITalent_Quiz2.Models.Post", b =>
                {
                    b.HasOne("ITalent_Quiz2.Models.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ITalent_Quiz2.Models.Category", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
